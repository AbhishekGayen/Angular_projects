
Angular Framework:

Angular 1 -> Javascript
Angular 2 -> typescript (Angular 16)

Features of Angular 2
1. Components
2. Typescript
3. ServiceComponents for Angular2:Module - break the application in logical pieces.
Component - bring all module together
Template - helps to define the views
Metadata - helps to add more data on angular js application.
Services - Used to create component which can be shared across entire application

    1. Include angular CLI application
	   2. npm install -g @angular/cli
	   3. ng new my-app
	   4. npm start (To run angular application)

Project Structure file explanation:
------------------------------------
1. node_module - store external dependency for project
2. src/ - Angular app stays over the this folder
3. src/apps -> contains main application code, the directory inclued module, component, service and other busi ness logic.
4. src/assests/ -> where we keep al the image, fonts, icons
5. src/environment -> where we keep all the necessary envionment file where we metion that whcih envionment we need to point todev/test/prod.
6. src/index.html ->main ahtml which loada first before application loads
7. src/main.ts - > entry point to an angular application using bootstrapApplication (<app-root></app-root>)
8. src/style.css -> whioch is generic/commpon style that can be applied to the entire application.

Configuration file:

a. angular.json - this file contains all the configuration related to angular CLI, including build, serve, test configuration.
b. package.json - list of dependencies of the project.
c. tsconfig.json - configuration for typescrpt including compilar option
d. tslint.json - we can define the rules for typescript


Architecture:

Component
	class
	export - if we try to use the component from other component
service = Service

Lifecycle of Angular:

1. ngOnChange() - when there is any change in input properties
2. ngOnInit() - once after the componet initialize
3. ngOnDestro()  - just before componet initialize
4. ngDoCheck() - every change detection cycle
5. ngAfterContentInit() - after content projection
6. ngAfterContentCheck() - after projected chec
7. ngViewInit() - After parent and child component visible
8. ngViewChecked() - after every check of compoent view

Decorators:
-----------
@Input() - passing parameter from Parent to child component
@Output() - passing parameter from child to parent
-----------
Angular Routing - is a mechanism that allows nevigation between 2 different components and looks lika SPA.
I loads component  based on the url and load the component.

RouterModule - helps to enable routing for nthe application
Routes - We have array of routes information.
RouterOutlet - directive, we use in template/html
RouterLink - like <a>.
ActivatedRoure - we can pass data via url

-------------
Backend Service can be invoked via http client. http we have all the methods like GET, PUT, POST, DELETYE

Observable - it is producer that emit(publish) data time to time.
once the data pusblished then we need some consumer (Subscriber) to consume that data
The reason we have to subscribe data in asynchronous way.

-----------------------------

[(ngModel)] -> achieve 2 way data binding
